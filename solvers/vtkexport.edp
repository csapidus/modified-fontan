/********************************************************************
  	This is the vtk file exporter! Do NOT touch this!!!!!
  ********************************************************************/


  Uh[int] uh(3);
  uh[0] = x;
  uh[1] = y;
  uh[2] = z;


  {
  int nvertices = Th.nv;
  int nelements = Th.nt;
  int size = Uh.ndof;
  {




  /*----------------------------------------------------------------------------------------------------------------------------------------------
  													HEADER
  ----------------------------------------------------------------------------------------------------------------------------------------------*/

  	kout << "# vtk DataFile Version 2.0 "<< endl;
  	kout << "output.vtk, Created by Freefem++, via gregorio" << "\n";
  	kout << "ASCII" << endl;
  	kout << "DATASET UNSTRUCTURED_GRID" << endl;


  /*----------------------------------------------------------------------------------------------------------------------------------------------
  														POINTS
  ----------------------------------------------------------------------------------------------------------------------------------------------*/

  	kout << "POINTS " << size << " double" << endl;
  	for ( int i = 0; i < size; i++)
  	{
  		real Thx = uh[0][][i];
  		real Thy = uh[1][][i];
  		real Thz = uh[2][][i];
  		kout << Thx  << " " << Thy << " " << Thz << endl;
  	}
  	kout << endl;


  /*----------------------------------------------------------------------------------------------------------------------------------------------
  														CELLS
  ----------------------------------------------------------------------------------------------------------------------------------------------*/


  	kout << "CELLS " << nelements << " "<< 5*nelements << endl;

  	for( int i = 0;i<nelements; i++) // cciclo sui triangoli
  		{
  			kout << 4 << " "; //sono tre i valori da salvare
  			for(int j = 0; j<4;j++) // 3---> since are triangle
  			{
  				kout << Uh(i,j) << " ";
  			}
  			kout << endl;
  		}
  	kout << endl;


  	/*----------------------------------------------------------------------------------------------------------------------------------------------
  														CELLS TYPES
  ----------------------------------------------------------------------------------------------------------------------------------------------*/

  	kout << "CELL_TYPES " << nelements << endl;
  	for(int i=0;i<nelements;i++)
  	{
  		kout << "10 ";
  	}

  	kout << endl;



  	/*----------------------------------------------------------------------------------------------------------------------------------------------
  														POINTS DATA
  ----------------------------------------------------------------------------------------------------------------------------------------------*/



  	kout << "POINT_DATA " << size << endl;
  	kout << " "<< endl;
  	int narray = 2;
  	string[int] name(narray);
  	name[0] = "velocity" ;
  	name[1] = "pressure" ;
  	kout << "FIELD " << "FieldData " << narray << endl;
  	for (int h = 0; h<narray; h++)
  	{

  		if (h==0)
  		{
  			kout << name[h] << " 3 " << size <<" double" << endl;
  			for (int i =0; i< size ;i++)
  			{
  				real Thx = uh[0][][i];
  				real Thy = uh[1][][i];
  				real Thz = uh[2][][i];
  				kout << ux(Thx,Thy,Thz) << " " << uy(Thx,Thy,Thz) <<" "<< uz(Thx,Thy,Thz) << endl;
  			}
  		}
  		else
  		{
  			kout << endl;
  			kout << name[h] << " 1 " << size <<" double" << endl;
  			for (int i =0; i< size ;i++)
  			{
  				real Thx = uh[0][][i];
  				real Thy = uh[1][][i];
  				real Thz = uh[2][][i];
  				kout << p(Thx,Thy,Thz) <<  endl;
  			}
  		}

  	}

  }

  }