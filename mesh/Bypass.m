%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Original File by M. De Luca & A. Veneziani 2010                         %
% Modified by Mahdi Al-Husseini, 11 October 2017 [1.4]                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function Bypass( filename,Ribint, Ribext, Rpvext, pvspan, ...
    RlwextL, RlwextS, lvspan, offset, extensionspan, hmesh, method)
% Bypass generates a file .geo to be read by NetGen with an idealized
% coronary bypass. Formed of four shapes: three cylinders and a torus
%
%% INPUT PARAMETERS
% MISCELLANEOUS **********************************************************
% filename = name of the .geo file (extension is optional)
% hmesh = max size of the dsired mesh
% offset = lateral off-set between incoming SVC and IVC
% method = fontant or alternative procedure
% Superior Vena Cava (SVC) *****************************************************************
% Ribext = external radius of SVC
% Ribint = internal radius of SVC
% extensionspan = length of the SVC extension
% Pulmonary Artery (PA) **********************************************************
% Rpvext = external radius of PA
% pvspan = span of the PA
% Inferior Vena Cava (IVC) ***********************************************************
% Rlvext = external radius of IVC
% lvspan = span of IVC

%% File Operations (optional, in case of user defined file-name)
n=length(filename);
if filename(n-3:n)=='.geo', file=filename, else file=strcat(filename,'.geo');
    
fid=fopen(file,'w');

fprintf(fid,'###########################################################\n');
fprintf(fid,'# Idealized Coronary Bypass Generated by Bypass.m\n');
fprintf(fid,'# Original File By M.R. De Luca and A. Veneziani - 2010\n');
fprintf(fid,'# Modified By Mahdi Al-Husseini for Coronary Bypass - 2017\n');
fprintf(fid,'###########################################################\n\n');

fprintf(fid,'algebraic3d\n\n');

%% Forming Geometry: FONTAN

if (strcmp(method, 'fontan'))
    rl = pvspan/2.0;
    ll = - rl;

    fprintf(fid,'#################### Pulmonary Artery ####################\n');
    fprintf(fid,'solid pa = cylinder (%f,0,0;%f,0,0;%f)\n',ll, rl, Rpvext);
    fprintf(fid,'and plane (%f, 0, 0; %f, 0, 0) \n',ll+1,-1);
    fprintf(fid,'and plane (%f, 0, 0; %f, 0, 0); \n\n',rl-1,1);

    centerYTorus = Ribext - Ribint + Rpvext - 0.01; % -0.01 because does not mesh if fit is exact!
    fprintf(fid,'#################### Superior Vena Cava (SVC) ###################\n');
    fprintf(fid,'solid svc = torus (0,%f,0;0,0,1;%f;%f)\n',centerYTorus, Ribext, Ribint);
    fprintf(fid,'and plane (0, 0, 0; 1, 0, 0) \n');
    fprintf(fid,'and plane (0, %f, 0; 0, 1, 0); \n\n',centerYTorus);

    fprintf(fid,'#################### SVC Extension ####################\n');
    fprintf(fid,'solid svcE = cylinder (%f,%f,0;%f,%f,0;%f)\n', -Ribext, centerYTorus, -Ribext, extensionspan +centerYTorus, Ribint);
    fprintf(fid,'and plane (0, %f, 0; 0, 1, 0) \n', extensionspan+centerYTorus);
    fprintf(fid,'and plane (0, %f, 0; 0, -1, 0); \n', centerYTorus);

    fprintf(fid,'##################### Inferior Vena Cava (IVC) #####################\n');
    fprintf(fid,'solid ivc = cone (%f,0,0;%f;%f,%f,0;%f)\n',-offset, RlwextS, -offset, -lvspan, RlwextL);
    fprintf(fid,'and plane (%f, %f, 0; 0, -1, 0) \n',-offset,-offset);
    fprintf(fid,'and plane (%f, 0.1, 0; 0, 1, 0); \n\n',-offset);

    fprintf(fid,'solid lumen = svcE or pa or svc or ivc;\n');

    fprintf(fid,'tlo lumen; -maxh=%f\n',hmesh);

    fclose(fid);

%% Forming Geometry: ALTERNATIVE

elseif (strcmp(method, 'alternative'))
    rl = pvspan/2.0;
    ll = - rl;

    fprintf(fid,'#################### Pulmonary Artery ####################\n');
    fprintf(fid,'solid pa = cylinder (%f,0,0;%f,0,0;%f)\n',ll, rl, Rpvext);
    fprintf(fid,'and plane (%f, 0, 0; %f, 0, 0) \n',ll+1,-1);
    fprintf(fid,'and plane (%f, 0, 0; %f, 0, 0); \n\n',rl-1,1);

    centerYTorus = Ribext - Ribint + Rpvext - 0.01; % -0.01 because does not mesh if fit is exact!
    fprintf(fid,'#################### Superior Vena Cava (SVC) ###################\n');
    fprintf(fid,'solid svc = torus (0,%f,0;0,0,1;%f;%f)\n',centerYTorus, Ribext, Ribint);
    fprintf(fid,'and plane (0, 0, 0; -1, 0, 0) \n');
    fprintf(fid,'and plane (0, %f, 0; 0, 1, 0); \n\n',centerYTorus);

    fprintf(fid,'#################### SVC Extension ####################\n');
    fprintf(fid,'solid svcE = cylinder (%f,%f,0;%f,%f,0;%f)\n', Ribext, centerYTorus, Ribext, extensionspan +centerYTorus, Ribint);
    fprintf(fid,'and plane (0, %f, 0; 0, 1, 0) \n', extensionspan+centerYTorus);
    fprintf(fid,'and plane (0, %f, 0; 0, -1, 0); \n', centerYTorus);

    fprintf(fid,'##################### Inferior Vena Cava (IVC) #####################\n');
    fprintf(fid,'solid ivc = cone (%f,0,0;%f;%f,%f,0;%f)\n',-offset, RlwextS, -offset, -lvspan, RlwextL);
    fprintf(fid,'and plane (%f, %f, 0; 0, -1, 0) \n',-offset,-offset);
    fprintf(fid,'and plane (%f, 0.1, 0; 0, 1, 0); \n\n',-offset);

    fprintf(fid,'solid lumen = svcE or pa or svc or ivc;\n');

    fprintf(fid,'tlo lumen; -maxh=%f\n',hmesh);

    fclose(fid);
     
end
end